# Generated by Django 3.2.6 on 2021-09-13 05:22

import account.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=50, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=50, verbose_name='last name')),
                ('username', models.CharField(max_length=10, unique=True, verbose_name='username')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('date_joined', models.DateTimeField(auto_now=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name="customer's full name")),
                ('email', models.EmailField(max_length=150, unique=True, verbose_name="customer's email address")),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name="customer's phone number")),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(default=account.models.Account, on_delete=django.db.models.deletion.CASCADE, related_name='customer', related_query_name='account', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('address1', models.CharField(max_length=255, null=True, verbose_name='area, colony, street')),
                ('address2', models.CharField(max_length=255, null=True, verbose_name='flat, house, building')),
                ('landmark', models.CharField(max_length=255, null=True, verbose_name='landmark')),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('city', models.CharField(max_length=50, verbose_name='city or town')),
                ('zip_code', models.IntegerField(verbose_name='area zip code')),
                ('delivery_instruction', models.CharField(blank=True, max_length=255, verbose_name='delivery instruction')),
                ('default', models.BooleanField(default=False, verbose_name='default')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address', related_query_name='customer', to='account.customer')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
            },
        ),
    ]
